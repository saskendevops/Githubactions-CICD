name: CICD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1️⃣ Checkout Code
  checkout:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  # 2️⃣ Build with Maven
  build:
    runs-on: self-hosted
    needs: checkout
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin
          cache: maven

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven
          mvn -v  # Verify Maven installation

      - name: Build with Maven
        run: mvn package --file pom.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Githubactions-CICD
          path: target/*.jar

  # 3️⃣ SonarQube Analysis
  sonarqube:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Install required packages
        run: sudo apt-get update && sudo apt-get install -y jq unzip

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # 4️⃣ Build Docker Image
  docker-build:
    runs-on: self-hosted
    needs: sonarqube
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t saskendevops/boardgame-app:latest .

      - name: Trivy Image Scan
        run: |
          trivy image --format table -o trivy-image-report.html saskendevops/boardgame-app:latest

  # 5️⃣ Push Docker Image
  docker-push:
    runs-on: self-hosted
    needs: docker-build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push saskendevops/boardgame-app:latest

  # 6️⃣ Deploy to Kubernetes
  deploy:
    runs-on: self-hosted
    needs: docker-push
    steps:
      - name: kubectl Action
        uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}

      - run: |
          kubectl apply -f deployment-service.yaml -n webapps
          kubectl get svc -n webapps
